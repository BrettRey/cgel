# sent_id = reviews-329692-0007
# sent_num = 1
# text = Well, not much I can say except I'm very disappointed with this experience.
# sent = well not much I can say -- except I 'm very disappointed with this experience
(NP
    :Supplement (IntP
        :Head (Int :t "well"))
    :Head (NP
        :Head (Nom
            :Det-Head (y / DP
                :Mod (AdvP
                    :Head (Adv :t "not"))
                :Head (D :t "much"))
            :Mod (Clause_rel
                :Subj (NP
                    :Head (Nom
                        :Head (N_pro :t "I")))
                :Head (VP
                    :Head (V_aux :t "can")
                    :Comp (Clause
                        :Head (VP
                            :Head (V :t "say")
                            :Obj (y / GAP)))))))
    :Mod (PP
        :Head (P :t "except")
        :Comp (Clause
            :Subj (NP
                :Head (Nom
                    :Head (N_pro :t "I")))
            :Head (VP
                :Head (V_aux :t "'m")
                :PredComp (AdjP
                    :Mod (AdvP
                        :Head (Adv :t "very"))
                    :Head (AdjP
                        :Head (Adj :t "disappointed")
                        :Comp (PP
                            :Head (P :t "with")
                            :Obj (NP
                                :Det (DP
                                    :Head (D :t "this"))
                                :Head (Nom
                                    :Head (N :t "experience"))))))))))

# sent_id = weblog-blogspot.com_dakbangla_20050311135387_ENG_20050311_135387-0106
# sent_num = 2
# text = Microbiologist Abdul Qadoos Khan was charged along with his son, Ahmed, for harboring the fugitives.
# sent = microbiologist Abdul Qadoos Khan was charged along with his son Ahmed for harboring the fugitives
(Clause
    :Subj (NP
        :Head (Nom
            :Mod (Nom
                :Head (N :t "microbiologist"))
            :Head (N
                :Flat (N :t "Abdul")
                :Flat (N :t "Qadoos")
                :Flat (N :t "Khan"))))
    :Head (VP
        :Head (V_aux :t "was")
        :Comp (Clause
            :Head (VP
                :Head (V :t "charged")
                :Supplement (PP
                    :Head (P :t "along")
                    :Comp (PP
                        :Head (P :t "with")
                        :Obj (NP
                            :Head (NP
                                :Det (NP
                                    :Head (Nom
                                        :Head (N_pro :t "his")))
                                :Head (Nom
                                    :Head (N :t "son")))
                            :Mod (NP
                                :Head (Nom
                                    :Head (N :t "Ahmed"))))))
                :Comp (PP
                    :Head (P :t "for")
                    :Comp (Clause
                        :Head (VP
                            :Head (V :t "harboring")
                            :Obj (NP
                                :Det (DP
                                    :Head (D :t "the"))
                                :Head (Nom
                                    :Head (N :t "fugitives"))))))))))

# sent_id = email-enronsent39_01-0060
# sent_num = 3
# text = Pat Wood made a phone call to Tom Noel and told him to get the Texas market fixed.
# sent = Pat Wood made a phone call to Tom Noel and told him to get the Texas market fixed
(Clause
    :Subj (NP
        :Head (Nom
            :Head (N
                :Flat (N :t "Pat")
                :Flat (N :t "Wood"))))
    :Head (Coordination
        :Coordinate (VP
            :Head (V :t "made")
            :Obj (NP
                :Det (DP
                    :Head (D :t "a"))
                :Head (Nom
                    :Mod (Nom
                        :Head (N :t "phone"))
                    :Head (N :t "call")))
            :Comp (PP
                :Head (P :t "to")
                :Obj (NP
                    :Head (Nom
                        :Head (N
                            :Flat (N :t "Tom")
                            :Flat (N :t "Noel"))))))
        :Coordinate (VP
            :Marker (Coordinator :t "and")
            :Head (VP
                :Head (V :t "told")
                :Obj (NP
                    :Head (Nom
                        :Head (N_pro :t "him")))
                :Comp (Clause
                    :Head (VP
                        :Marker (Sdr :t "to")
                        :Head (VP
                            :Head (V :t "get")
                            :Obj (NP
                                :Det (DP
                                    :Head (D :t "the"))
                                :Head (Nom
                                    :Mod (Nom
                                        :Head (N :t "Texas"))
                                    :Head (N :t "market")))
                            :PredComp (AdjP
                                :Head (Adj :t "fixed")))))))))

# sent_id = newsgroup-groups.google.com_emails_ec0a1064de05e74b_ENG_20040929_023800-0014
# sent_num = 4
# text = The name started as a joke boasting about the amount of information the search-engine would be able to search.
# sent = the name started as a joke boasting about the amount of information the search engine would be able to search --
(Clause
    :Subj (NP
        :Det (DP
            :Head (D :t "the"))
        :Head (Nom
            :Head (N :t "name")))
    :Head (VP
        :Head (V :t "started")
        :Comp (PP
            :Head (P :t "as")
            :PredComp (NP
                :Det (DP
                    :Head (D :t "a"))
                :Head (Nom
                    :Head (N :t "joke")
                    :Mod (Clause
                        :Head (VP
                            :Head (V :t "boasting")
                            :Comp (PP
                                :Head (P :t "about")
                                :Obj (NP
                                    :Det (DP
                                        :Head (D :t "the"))
                                    :Head (Nom
                                        :Head (N :t "amount")
                                        :Comp (PP
                                            :Head (P :t "of")
                                            :Obj (NP
                                                :Head (Nom
                                                    :Head (x / N :t "information")
                                                    :Mod (Clause_rel
                                                        :Subj (NP
                                                            :Det (DP
                                                                :Head (D :t "the"))
                                                            :Head (Nom
                                                                :Mod (Nom
                                                                    :Head (N :t "search"))
                                                                :Head (N :t "engine")))
                                                        :Head (VP
                                                            :Head (V_aux :t "would")
                                                            :Comp (Clause
                                                                :Head (VP
                                                                    :Head (V_aux :t "be")
                                                                    :PredComp (AdjP
                                                                        :Head (Adj :t "able")
                                                                        :Comp (Clause
                                                                            :Head (VP
                                                                                :Marker (Sdr :t "to")
                                                                                :Head (VP
                                                                                    :Head (V :t "search")
                                                                                    :Obj (x / GAP))))))))))))))))))))))

# sent_id = reviews-079375-0005
# sent_num = 5
# text = lol They where super friendly towards us and treated us like people not walking bags of cash.
# sent = lol they where super friendly towards us and treated us like people not walking bags of cash
(Coordination
    :Supplement (IntP
        :Head (Int :t "lol"))
    :Coordinate (Clause
        :Subj (NP
            :Head (Nom
                :Head (N_pro :t "they")))
        :Head (VP
            :Head (V :t "where" :correct "were")
            :PredComp (AdjP
                :Mod (AdvP
                    :Head (Adv :t "super"))
                :Head (AdjP
                    :Head (Adj :t "friendly")
                    :Comp (PP
                        :Head (P :t "towards")
                        :Obj (NP
                            :Head (Nom
                                :Head (N_pro :t "us"))))))))
    :Coordinate (Clause
        :Marker (Coordinator :t "and")
        :Head (Clause
            :Head (VP
                :Head (V :t "treated")
                :Obj (NP
                    :Head (Nom
                        :Head (N_pro :t "us")))
                :Comp (PP
                    :Head (P :t "like")
                    :Obj (NP
                        :Head (Nom
                            :Head (N :t "people"))
                        :Supplement (NP
                            :Mod (AdvP
                                :Head (Adv :t "not"))
                            :Head (NP
                                :Head (Nom
                                    :Mod (VP
                                        :Head (V :t "walking"))
                                    :Head (Nom
                                        :Head (N :t "bags")
                                        :Comp (PP
                                            :Head (P :t "of")
                                            :Obj (NP
                                                :Head (Nom
                                                    :Head (N :t "cash"))))))))))))))

# sent_id = answers-20111108104724AAuBUR7_ans-0095
# sent_num = 6
# text = A few hundred out of pocket now will possibly save you thousands once the horse is in your name.
# sent = a few hundred out of pocket now will possibly save you thousands once the horse is in your name
(Clause
    :Subj (NP
        :Head (NP
            :Head (Nom
                :Det-Head (DP
                    :Mod (DP
                        :Head (D :t "a few"))
                    :Head (D :t "hundred"))
                :Mod (PP
                    :Head (P :t "out")
                    :Comp (PP
                        :Head (P :t "of")
                        :Obj (NP
                            :Head (Nom
                                :Head (N :t "pocket")))))))
        :Mod (PP
            :Head (P :t "now")))
    :Head (VP
        :Head (V_aux :t "will")
        :Comp (Clause
            :Head (VP
                :Mod (AdvP
                    :Head (Adv :t "possibly"))
                :Head (VP
                    :Head (VP
                        :Head (V :t "save")
                        :Obj_ind (NP
                            :Head (Nom
                                :Head (N_pro :t "you")))
                        :Obj_dir (NP
                            :Head (Nom
                                :Head (N :t "thousands"))))
                    :Mod (PP
                        :Head (P :t "once")
                        :Comp (Clause
                            :Subj (NP
                                :Det (DP
                                    :Head (D :t "the"))
                                :Head (Nom
                                    :Head (N :t "horse")))
                            :Head (VP
                                :Head (V_aux :t "is")
                                :PredComp (PP
                                    :Head (P :t "in")
                                    :Obj (NP
                                        :Det (NP
                                            :Head (Nom
                                                :Head (N_pro :t "your")))
                                        :Head (Nom
                                            :Head (N :t "name"))))))))))))

# sent_id = weblog-blogspot.com_dakbangla_20050311135387_ENG_20050311_135387-0001
# sent_num = 7
# text = Zawahiri was associated with a faction of the Egyptian Islamic Jihad known as the Vanguards of Conquest.
# sent = Zawahiri was associated with a faction of the Egyptian Islamic Jihad known as the Vanguards of Conquest
(Clause
    :Subj (NP
        :Head (Nom
            :Head (N :t "Zawahiri")))
    :Head (VP
        :Head (V_aux :t "was")
        :Comp (Clause
            :Head (VP
                :Head (V :t "associated")
                :Comp (PP
                    :Head (P :t "with")
                    :Obj (NP
                        :Det (DP
                            :Head (D :t "a"))
                        :Head (Nom
                            :Head (Nom
                                :Head (N :t "faction")
                                :Mod (PP
                                    :Head (P :t "of")
                                    :Obj (NP
                                        :Det (DP
                                            :Head (D :t "the"))
                                        :Head (Nom
                                            :Mod (AdjP
                                                :Head (Adj :t "Egyptian"))
                                            :Head (Nom
                                                :Mod (AdjP
                                                    :Head (Adj :t "Islamic"))
                                                :Head (N :t "Jihad"))))))
                            :Mod (Clause
                                :Head (VP
                                    :Head (V :t "known")
                                    :Comp (PP
                                        :Head (P :t "as")
                                        :PredComp (NP
                                            :Det (DP
                                                :Head (D :t "the"))
                                            :Head (Nom
                                                :Head (N :t "Vanguards")
                                                :Comp (PP
                                                    :Head (P :t "of")
                                                    :Obj (NP
                                                        :Head (Nom
                                                            :Head (N :t "Conquest"))))))))))))))))

# sent_id = reviews-074896-0008
# sent_num = 8
# text = Huge selection and, great suggestions from the staff and they refer you to reliable places if they don't have what you need.
# sent = huge selection and great suggestions from the staff and they refer you to reliable places if they don't have what you need --
(Coordination
    :Coordinate (NP
        :Head (Nom
            :Mod (AdjP
                :Head (Adj :t "huge"))
            :Head (N :t "selection")))
    :Coordinate (NP
        :Marker (Coordinator :t "and")
        :Head (NP
            :Head (Nom
                :Mod (AdjP
                    :Head (Adj :t "great"))
                :Head (Nom
                    :Head (N :t "suggestions")
                    :Mod (PP
                        :Head (P :t "from")
                        :Obj (NP
                            :Det (DP
                                :Head (D :t "the"))
                            :Head (Nom
                                :Head (N :t "staff"))))))))
    :Coordinate (Clause
        :Marker (Coordinator :t "and")
        :Head (Clause
            :Subj (NP
                :Head (Nom
                    :Head (N_pro :t "they")))
            :Head (VP
                :Head (VP
                    :Head (V :t "refer")
                    :Obj (NP
                        :Head (Nom
                            :Head (N_pro :t "you")))
                    :Comp (PP
                        :Head (P :t "to")
                        :Obj (NP
                            :Head (Nom
                                :Mod (AdjP
                                    :Head (Adj :t "reliable"))
                                :Head (N :t "places")))))
                :Mod (PP
                    :Head (P :t "if")
                    :Comp (Clause
                        :Subj (NP
                            :Head (Nom
                                :Head (N_pro :t "they")))
                        :Head (VP
                            :Head (V_aux :t "don't")
                            :Comp (Clause
                                :Head (VP
                                    :Head (V :t "have")
                                    :Obj (NP
                                        :Head (Nom
                                            :Mod (Clause_rel
                                                :Head-Prenucleus (x / NP
                                                    :Head (Nom
                                                        :Head (N_pro :t "what")))
                                                :Head (Clause_rel
                                                    :Subj (NP
                                                        :Head (Nom
                                                            :Head (N_pro :t "you")))
                                                    :Head (VP
                                                        :Head (V :t "need")
                                                        :Obj (x / GAP)))))))))))))))

# sent_id = newsgroup-groups.google.com_emails_ec0a1064de05e74b_ENG_20040929_023800-0032
# sent_num = 9
# text = Founder Paul Galvin came up with this name when his company started manufacturing radios for cars.
# sent = founder Paul Galvin came up with this name when his company started manufacturing radios for cars
(Clause
    :Subj (NP
        :Head (Nom
            :Mod (Nom
                :Head (N :t "founder"))
            :Head (N
                :Flat (N :t "Paul")
                :Flat (N :t "Galvin"))))
    :Head (VP
        :Head (VP
            :Head (V :t "came")
            :Comp (PP
                :Head (P :t "up"))
            :Comp (PP
                :Head (P :t "with")
                :Obj (NP
                    :Det (DP
                        :Head (D :t "this"))
                    :Head (Nom
                        :Head (N :t "name")))))
        :Mod (PP
            :Head (P :t "when")
            :Comp (Clause
                :Subj (NP
                    :Det (NP
                        :Head (Nom
                            :Head (N_pro :t "his")))
                    :Head (Nom
                        :Head (N :t "company")))
                :Head (VP
                    :Head (V :t "started")
                    :Comp (Clause
                        :Head (VP
                            :Head (V :t "manufacturing")
                            :Obj (NP
                                :Head (Nom
                                    :Head (N :t "radios")
                                    :Mod (PP
                                        :Head (P :t "for")
                                        :Obj (NP
                                            :Head (Nom
                                                :Head (N :t "cars")))))))))))))

# sent_id = reviews-035726-0003
# sent_num = 10
# text = Dr. Aster is very kind an gentle with the children, but also positive and to the point with the parents.
# sent = Dr. Aster is very kind an gentle with the children but also positive and to the point with the parents
(Clause
    :Subj (NP
        :Head (Nom
            :Mod (Nom
                :Head (N :t "Dr."))
            :Head (N :t "Aster")))
    :Head (VP
        :Head (V_aux :t "is")
        :PredComp (Coordination
            :Coordinate (AdjP
                :Mod (AdvP
                    :Head (Adv :t "very"))
                :Head (AdjP
                    :Head (Coordination
                        :Coordinate (AdjP
                            :Head (Adj :t "kind"))
                        :Coordinate (AdjP
                            :Marker (Coordinator :t "an" :correct "and")
                            :Head (AdjP
                                :Head (Adj :t "gentle"))))
                    :Comp (PP
                        :Head (P :t "with")
                        :Obj (NP
                            :Det (DP
                                :Head (D :t "the"))
                            :Head (Nom
                                :Head (N :t "children"))))))
            :Coordinate (AdjP+PP
                :Marker (Coordinator :t "but")
                :Head (AdjP+PP
                    :Mod (AdvP
                        :Head (Adv :t "also"))
                    :Head (AdjP+PP
                        :Head (Coordination
                            :Coordinate (AdjP
                                :Head (Adj :t "positive"))
                            :Coordinate (PP
                                :Marker (Coordinator :t "and")
                                :Head (PP
                                    :Head (P :t "to")
                                    :Obj (NP
                                        :Det (DP
                                            :Head (D :t "the"))
                                        :Head (Nom
                                            :Head (N :t "point"))))))
                        :Comp (PP
                            :Head (P :t "with")
                            :Obj (NP
                                :Det (DP
                                    :Head (D :t "the"))
                                :Head (Nom
                                    :Head (N :t "parents"))))))))))

# sent_id = ???11
# sent_num = 11
# text = Andrew Tate was let back on Twitter by Elon Musk so he tweeted at Greta Thurnburg who owned him in a viral tweet to which he responded w a video containing a pizza box confirming his whereabouts to Romanian police who arrested him on charges of sex trafficking.
# sent = Andrew Tate was let back on Twitter by Elon Musk so he tweeted at Greta Thurnburg who -- owned him in a viral tweet to which he responded -- w a video containing a pizza box confirming his whereabouts to Romanian police who -- arrested him on charges of sex trafficking
(Coordination
    :Coordinate (Clause
        :Subj (NP
            :Head (Nom
                :Head (N
                    :Flat (N :t "Andrew")
                    :Flat (N :t "Tate"))))
        :Head (VP
            :Head (V_aux :t "was")
            :Comp (Clause
                :Head (VP
                    :Head (V :t "let")
                    :Comp (PP
                        :Mod (PP
                            :Head (P :t "back"))
                        :Head (PP
                            :Head (P :t "on")
                            :Obj (NP
                                :Head (Nom
                                    :Head (N :t "Twitter")))))
                    :Comp (PP
                        :Head (P :t "by")
                        :Obj (NP
                            :Head (Nom
                                :Head (N
                                    :Flat (N :t "Elon")
                                    :Flat (N :t "Musk")))))))))
    :Coordinate (Clause
        :Marker (Coordinator :t "so")
        :Head (Clause
            :Subj (NP
                :Head (Nom
                    :Head (N_pro :t "he")))
            :Head (VP
                :Head (V :t "tweeted")
                :Mod (PP
                    :Head (P :t "at")
                    :Obj (NP
                        :Head (Nom
                            :Head (N
                                :Flat (N :t "Greta")
                                :Flat (N :t "Thurnburg" :correct "Thunburg"))
                            :Supplement (Clause_rel
                                :Prenucleus (y / NP
                                    :Head (Nom
                                        :Head (N_pro :t "who")))
                                :Head (Clause_rel
                                    :Subj (y / GAP)
                                    :Head (VP
                                        :Head (VP
                                            :Head (V :t "owned")
                                            :Obj (NP
                                                :Head (Nom
                                                    :Head (N_pro :t "him"))))
                                        :Mod (PP
                                            :Head (P :t "in")
                                            :Obj (NP
                                                :Det (DP
                                                    :Head (D :t "a"))
                                                :Head (Nom
                                                    :Mod (AdjP
                                                        :Head (Adj :t "viral"))
                                                    :Head (N :t "tweet"))))))
                                :Supplement (Clause_rel
                                    :Prenucleus (z / PP
                                        :Head (P :t "to")
                                        :Obj (NP
                                            :Head (Nom
                                                :Head (N_pro :t "which"))))
                                    :Head (Clause_rel
                                        :Subj (NP
                                            :Head (Nom
                                                :Head (N_pro :t "he")))
                                        :Head (VP
                                            :Head (V :t "responded")
                                            :Comp (z / GAP)
                                            :Comp (PP
                                                :Head (P :t "w" :correct "with")
                                                :Obj (NP
                                                    :Det (DP
                                                        :Head (D :t "a"))
                                                    :Head (Nom
                                                        :Head (N :t "video")
                                                        :Mod (Clause
                                                            :Head (VP
                                                                :Head (V :t "containing")
                                                                :Obj (NP
                                                                    :Det (DP
                                                                        :Head (D :t "a"))
                                                                    :Head (Nom
                                                                        :Head (Nom
                                                                            :Mod (Nom
                                                                                :Head (N :t "pizza"))
                                                                            :Head (N :t "box"))
                                                                        :Mod (Clause
                                                                            :Head (VP
                                                                                :Head (V :t "confirming")
                                                                                :Obj (NP
                                                                                    :Det (NP
                                                                                        :Head (Nom
                                                                                            :Head (N_pro :t "his")))
                                                                                    :Head (Nom
                                                                                        :Head (N :t "whereabouts")))
                                                                                :Comp (PP
                                                                                    :Head (P :t "to")
                                                                                    :Obj (NP
                                                                                        :Head (Nom
                                                                                            :Mod (Nom
                                                                                                :Head (N :t "Romanian"))
                                                                                            :Head (N :t "police")
                                                                                            :Supplement (Clause_rel
                                                                                                :Prenucleus (x / NP
                                                                                                    :Head (Nom
                                                                                                        :Head (N_pro :t "who")))
                                                                                                :Head (Clause_rel
                                                                                                    :Subj (x / GAP)
                                                                                                    :Head (VP
                                                                                                        :Head (V :t "arrested")
                                                                                                        :Obj (NP
                                                                                                            :Head (Nom
                                                                                                                :Head (N_pro :t "him")))
                                                                                                        :Comp (PP
                                                                                                            :Head (P :t "on")
                                                                                                            :Obj (NP
                                                                                                                :Head (Nom
                                                                                                                    :Head (N :t "charges")
                                                                                                                    :Comp (PP
                                                                                                                        :Head (P :t "of")
                                                                                                                        :Obj (NP
                                                                                                                            :Head (Nom
                                                                                                                                :Mod (Nom
                                                                                                                                    :Head (N :t "sex"))
                                                                                                                                :Head (N :t "trafficking")))))))))))))))))))))))))))))))))

# sent_id = email-enronsent26_01-0028
# sent_num = 12
# text = I'm looking for the confidentiality agreement, which may be in Bart's files (haven't checked closely yet).
# sent = I 'm looking for the confidentiality agreement which -- may be in Bart's files haven't checked closely yet
(Clause
    :Subj (NP
        :Head (Nom
            :Head (N_pro :t "I")))
    :Head (VP
        :Head (V_aux :t "'m")
        :Comp (Clause
            :Head (VP
                :Head (V :t "looking")
                :Comp (PP
                    :Head (P :t "for")
                    :Obj (NP
                        :Det (DP
                            :Head (D :t "the"))
                        :Head (Nom
                            :Mod (Nom
                                :Head (N :t "confidentiality"))
                            :Head (N :t "agreement")))))))
    :Supplement (Clause_rel
        :Prenucleus (x / NP
            :Head (Nom
                :Head (N_pro :t "which")))
        :Head (Clause_rel
            :Subj (x / GAP)
            :Head (VP
                :Head (V_aux :t "may")
                :Comp (Clause
                    :Head (VP
                        :Head (V_aux :t "be")
                        :PredComp (PP
                            :Head (P :t "in")
                            :Obj (NP
                                :Head (Nom
                                    :Mod (Nom
                                        :Head (N :t "Bart's"))
                                    :Head (N :t "files"))))))))
        :Supplement (Clause
            :Head (VP
                :Head (V_aux :t "haven't")
                :Comp (Clause
                    :Head (VP
                        :Head (VP
                            :Head (V :t "checked")
                            :Mod (AdvP
                                :Head (Adv :t "closely")))
                        :Mod (AdvP
                            :Head (Adv :t "yet"))))))))

# sent_id = weblog-blogspot.com_rigorousintuition_20060511134300_ENG_20060511_134300-0289
# sent_num = 13
# text = I just get hung up on 'Christians', as they're the dominant form where I come from.
# sent = I just get hung up on Christians as they 're the dominant form where I come from --
(Clause
    :Subj (NP
        :Head (Nom
            :Head (N_pro :t "I")))
    :Head (VP
        :Head (VP
            :Mod (AdvP
                :Head (Adv :t "just"))
            :Head (VP
                :Head (V :t "get")
                :Comp (Clause
                    :Head (VP
                        :Head (V :t "hung")
                        :Comp (PP
                            :Head (P :t "up"))
                        :Comp (PP
                            :Head (P :t "on")
                            :Obj (NP
                                :Head (Nom
                                    :Head (N :t "Christians"))))))))
        :Mod (PP
            :Head (P :t "as")
            :Comp (Clause
                :Subj (NP
                    :Head (Nom
                        :Head (N_pro :t "they")))
                :Head (VP
                    :Head (VP
                        :Head (V_aux :t "'re")
                        :PredComp (NP
                            :Det (DP
                                :Head (D :t "the"))
                            :Head (Nom
                                :Mod (AdjP
                                    :Head (Adj :t "dominant"))
                                :Head (N :t "form"))))
                    :Mod (PP
                        :Mod (Clause_rel
                            :Head-Prenucleus (x / PP
                                :Head (P :t "where"))
                            :Head (Clause_rel
                                :Subj (NP
                                    :Head (Nom
                                        :Head (N_pro :t "I")))
                                :Head (VP
                                    :Head (V :t "come")
                                    :Comp (PP
                                        :Head (P :t "from")
                                        :Obj (x / GAP)))))))))))

# sent_id = ???14
# sent_num = 14
# text = Jeremy Renner, the actor who remained in critical but stable condition on Tuesday, was run over by a snow plow weighing more than 14,000 pounds that he had used to tow his car on a snowed-in road near his home in Reno, Nevada, the authorities said.
# sent = Jeremy Renner the actor who -- remained in critical but stable condition on Tuesday was run over by a snow plow weighing more than 14,000 pounds that he had used -- to tow his car on a snowed-in road near his home in Reno Nevada the authorities said --
(Clause
    :Prenucleus (z / Clause
        :Subj (NP
            :Head (Nom
                :Head (N
                    :Flat (N :t "Jeremy")
                    :Flat (N :t "Renner")))
            :Supplement (NP
                :Det (DP
                    :Head (D :t "the"))
                :Head (Nom
                    :Head (N :t "actor")
                    :Mod (Clause_rel
                        :Prenucleus (x / NP
                            :Head (Nom
                                :Head (N_pro :t "who")))
                        :Head (Clause_rel
                            :Subj (x / GAP)
                            :Head (VP
                                :Head (VP
                                    :Head (V :t "remained")
                                    :PredComp (PP
                                        :Head (P :t "in")
                                        :Obj (NP
                                            :Head (Nom
                                                :Mod (Coordination
                                                    :Coordinate (AdjP
                                                        :Head (Adj :t "critical"))
                                                    :Coordinate (AdjP
                                                        :Marker (Coordinator :t "but")
                                                        :Head (AdjP
                                                            :Head (Adj :t "stable"))))
                                                :Head (N :t "condition")))))
                                :Mod (PP
                                    :Head (P :t "on")
                                    :Obj (NP
                                        :Head (Nom
                                            :Head (N :t "Tuesday"))))))))))
        :Head (VP
            :Head (V_aux :t "was")
            :Comp (Clause
                :Head (VP
                    :Head (V :t "run")
                    :Particle (PP
                        :Head (P :t "over"))
                    :Comp (PP
                        :Head (P :t "by")
                        :Obj (NP
                            :Det (DP
                                :Head (D :t "a"))
                            :Head (Nom
                                :Head (y / Nom
                                    :Head (Nom
                                        :Mod (Nom
                                            :Head (N :t "snow"))
                                        :Head (N :t "plow"))
                                    :Mod (Clause
                                        :Head (VP
                                            :Head (V :t "weighing")
                                            :Obj (NP
                                                :Det (DP :note "more than (number): p. 432"
                                                    :Head (D :t "more")
                                                    :Comp (PP
                                                        :Head (P :t "than")
                                                        :Obj (NP
                                                            :Head (Nom
                                                                :Det-Head (DP
                                                                    :Head (D :t "14,000"))))))
                                                :Head (Nom
                                                    :Head (N :t "pounds"))))))
                                :Mod (Clause_rel
                                    :Marker (Sdr :t "that")
                                    :Head (Clause_rel
                                        :Subj (NP
                                            :Head (Nom
                                                :Head (N_pro :t "he")))
                                        :Head (VP
                                            :Head (V_aux :t "had")
                                            :Comp (Clause
                                                :Head (VP
                                                    :Head (VP
                                                        :Head (V :t "used")
                                                        :Obj (y / GAP))
                                                    :Mod (Clause
                                                        :Head (VP
                                                            :Head (VP
                                                                :Marker (Sdr :t "to")
                                                                :Head (VP
                                                                    :Head (V :t "tow")
                                                                    :Obj (NP
                                                                        :Det (NP
                                                                            :Head (Nom
                                                                                :Head (N_pro :t "his")))
                                                                        :Head (Nom
                                                                            :Head (N :t "car")))))
                                                            :Mod (PP
                                                                :Head (P :t "on")
                                                                :Obj (NP
                                                                    :Det (DP
                                                                        :Head (D :t "a"))
                                                                    :Head (Nom
                                                                        :Mod (AdjP
                                                                            :Head (Adj :t "snowed-in"))
                                                                        :Head (Nom
                                                                            :Head (N :t "road")
                                                                            :Mod (PP
                                                                                :Head (P :t "near")
                                                                                :Obj (NP
                                                                                    :Det (NP
                                                                                        :Head (Nom
                                                                                            :Head (N_pro :t "his")))
                                                                                    :Head (Nom
                                                                                        :Head (N :t "home")
                                                                                        :Mod (PP
                                                                                            :Head (P :t "in")
                                                                                            :Obj (NP
                                                                                                :Head (Nom
                                                                                                    :Head (N :t "Reno")
                                                                                                    :Mod (Nom
                                                                                                        :Head (N :t "Nevada"))))))))))))))))))))))))))
    :Head (Clause
        :Subj (NP
            :Det (DP
                :Head (D :t "the"))
            :Head (Nom
                :Head (N :t "authorities")))
        :Head (VP
            :Head (V :t "said")
            :Comp (z / GAP))))

# sent_id = ???15
# sent_num = 15
# text = We're at start-of-term chaos level where Amazon just delivered something I need tomorrow that I was moping about having forgotten to order.
# sent = we 're at start-of-term chaos level where Amazon just delivered something I need -- tomorrow that I was moping about having forgotten to order --
(Clause
    :Subj (NP
        :Head (Nom
            :Head (N_pro :t "we")))
    :Head (VP
        :Head (V_aux :t "'re")
        :PredComp (PP
            :Head (P :t "at")
            :Obj (NP
                :Det (DP
                    :Head (D :correct "a"))
                :Head (Nom
                    :Head (Nom
                        :Mod (Nom
                            :Mod (Nom
                                :Head (N :t "start-of-term"))
                            :Head (N :t "chaos"))
                        :Head (N :t "level"))
                    :Mod (PP
                        :Head (P :t "where")
                        :Comp (Clause
                            :Subj (NP
                                :Head (Nom
                                    :Head (N :t "Amazon")))
                            :Head (VP
                                :Mod (AdvP
                                    :Head (Adv :t "just"))
                                :Head (VP
                                    :Head (V :t "delivered")
                                    :Obj (NP
                                        :Head (Nom
                                            :Head (y / Nom
                                                :Det-Head (z / DP
                                                    :Head (D :t "something"))
                                                :Mod (Clause_rel
                                                    :Subj (NP
                                                        :Head (Nom
                                                            :Head (N_pro :t "I")))
                                                    :Head (VP
                                                        :Head (VP
                                                            :Head (V :t "need")
                                                            :Obj (z / GAP))
                                                        :Mod (PP
                                                            :Head (P :t "tomorrow")))))
                                            :Mod (Clause_rel
                                                :Marker (Sdr :t "that")
                                                :Head (Clause_rel
                                                    :Subj (NP
                                                        :Head (Nom
                                                            :Head (N_pro :t "I")))
                                                    :Head (VP
                                                        :Head (V_aux :t "was")
                                                        :Comp (Clause
                                                            :Head (VP
                                                                :Head (V :t "moping")
                                                                :Comp (PP
                                                                    :Head (P :t "about")
                                                                    :Comp (Clause
                                                                        :Head (VP
                                                                            :Head (V_aux :t "having")
                                                                            :Comp (Clause
                                                                                :Head (VP
                                                                                    :Head (V :t "forgotten")
                                                                                    :Comp (Clause
                                                                                        :Head (VP
                                                                                            :Marker (Sdr :t "to")
                                                                                            :Head (VP
                                                                                                :Head (V :t "order")
                                                                                                :Obj (y / GAP)))))))))))))))))))))))))

# sent_id = ???16
# sent_num = 16
# text = Reports are now coming in of trouble at yet another jail.
# sent = reports -- are now coming in of trouble at yet another jail
(Clause
    :Head (Clause
        :Subj (NP
            :Head (Nom
                :Head (N :t "reports")
                :Comp (x / GAP)))
        :Head (VP
            :Head (V_aux :t "are")
            :Comp (Clause
                :Head (VP
                    :Mod (PP
                        :Head (P :t "now"))
                    :Head (VP
                        :Head (V :t "coming")
                        :Comp (PP
                            :Head (P :t "in")))))))
    :Postnucleus (x / PP
        :Head (P :t "of")
        :Obj (NP
            :Head (Nom
                :Head (N :t "trouble")
                :Mod (PP
                    :Head (P :t "at")
                    :Obj (NP
                        :Det (DP
                            :Mod (AdvP
                                :Head (Adv :t "yet"))
                            :Head (D :t "another"))
                        :Head (Nom
                            :Head (N :t "jail"))))))))

# sent_id = ???17
# sent_num = 17
# text = Then there's Burning Man, which used to be on Baker Beach but we don't even hold in the state anymore, and the Bay to Breakers race, which for most participants is more of a (barely) mobile drunken costume party than a race.
# sent = then there 's Burning Man which -- used to be on Baker Beach but we don't even hold -- in the state anymore and the Bay to Breakers race which for most participants -- is more of a barely mobile drunken costume party than a race
# source = The Language of Food (Jurafsky) ch. 8, quoted on Twitter
# URL = https://twitter.com/complingy/status/1618412072525791233
(Clause
    :Mod (PP
        :Head (P :t "then"))
    :Head (Clause
        :Subj (NP
            :Head (Nom
                :Head (N_pro :t "there")))
        :Head (VP
            :Head (V_aux :t "'s")
            :DisplacedSubj (Coordination
                :Coordinate (NP
                    :Head (Nom
                        :Mod (VP
                            :Head (V :t "Burning"))
                        :Head (N :t "Man"))
                    :Supplement (Clause_rel
                        :Prenucleus (x / NP
                            :Head (Nom
                                :Head (N_pro :t "which")))
                        :Head (Coordination
                            :Coordinate (Clause_rel
                                :Subj (x / GAP)
                                :Head (VP
                                    :Head (V :t "used")
                                    :Comp (Clause
                                        :Head (VP
                                            :Marker (Sdr :t "to")
                                            :Head (VP
                                                :Head (V_aux :t "be")
                                                :Comp (PP
                                                    :Head (P :t "on")
                                                    :Obj (NP
                                                        :Head (Nom
                                                            :Mod (Nom
                                                                :Head (N :t "Baker"))
                                                            :Head (N :t "Beach")))))))))
                            :Coordinate (Clause_rel
                                :Marker (Coordinator :t "but")
                                :Head (Clause_rel
                                    :Subj (NP
                                        :Head (Nom
                                            :Head (N_pro :t "we")))
                                    :Head (VP
                                        :Head (V_aux :t "don't")
                                        :Comp (Clause
                                            :Head (VP
                                                :Mod (AdvP
                                                    :Head (Adv :t "even"))
                                                :Head (VP
                                                    :Head (VP
                                                        :Head (VP
                                                            :Head (V :t "hold")
                                                            :Obj (x / GAP))
                                                        :Mod (PP
                                                            :Head (P :t "in")
                                                            :Obj (NP
                                                                :Det (DP
                                                                    :Head (D :t "the"))
                                                                :Head (Nom
                                                                    :Head (N :t "state")))))
                                                    :Mod (AdvP
                                                        :Head (Adv :t "anymore")))))))))))
                :Coordinate (NP
                    :Marker (Coordinator :t "and")
                    :Head (NP
                        :Det (DP
                            :Head (D :t "the"))
                        :Head (Nom
                            :Mod (Nom
                                :Head (N :t "Bay")
                                :Comp (PP
                                    :Head (P :t "to")
                                    :Obj (NP
                                        :Head (Nom
                                            :Head (N :t "Breakers")))))
                            :Head (N :t "race"))
                        :Supplement (Clause_rel
                            :Prenucleus (y / NP
                                :Head (Nom
                                    :Head (N_pro :t "which")))
                            :Head (Clause_rel
                                :Mod (PP
                                    :Head (P :t "for")
                                    :Obj (NP
                                        :Det (DP
                                            :Head (D :t "most"))
                                        :Head (Nom
                                            :Head (N :t "participants"))))
                                :Head (Clause_rel
                                    :Subj (y / GAP)
                                    :Head (VP
                                        :Head (V_aux :t "is")
                                        :PredComp (NP
                                            :Head (Nom
                                                :Head (Nom
                                                    :Det-Head (DP
                                                        :Head (D :t "more"))
                                                    :Comp (PP
                                                        :Head (P :t "of")
                                                        :Obj (NP
                                                            :Det (DP
                                                                :Head (D :t "a"))
                                                            :Head (Nom
                                                                :Mod (AdjP
                                                                    :Mod (AdvP
                                                                        :Head (Adv :t "barely"))
                                                                    :Head (Adj :t "mobile"))
                                                                :Head (Nom
                                                                    :Mod (VP
                                                                        :Head (V :t "drunken"))
                                                                    :Head (Nom
                                                                        :Mod (Nom
                                                                            :Head (N :t "costume"))
                                                                        :Head (N :t "party")))))))
                                                :Comp_ind (PP
                                                    :Head (P :t "than")
                                                    :Obj (NP
                                                        :Det (DP
                                                            :Head (D :t "a"))
                                                        :Head (Nom
                                                            :Head (N :t "race"))))))))))))))))

# sent_id = weblog-juancole.com_juancole_20040823064025_ENG_20040823_064025-0002
# sent_num = 18
# text = The charges that they have put some vets up to making against Kerry are false and can be demonstrated by the historical record to be false .
# sent = the charges that they have put some vets up to making -- against Kerry are false and can be demonstrated by the historical record to be false
(Clause
    :Subj (NP
        :Det (DP
            :Head (D :t "the"))
        :Head (Nom
            :Head (x / N :t "charges")
            :Mod (Clause_rel
                :Marker (Sdr :t "that")
                :Head (Clause_rel
                    :Subj (NP
                        :Head (Nom
                            :Head (N_pro :t "they")))
                    :Head (VP
                        :Head (V_aux :t "have")
                        :Comp (Clause
                            :Head (VP
                                :Head (V :t "put")
                                :Obj (NP
                                    :Det (DP
                                        :Head (D :t "some"))
                                    :Head (Nom
                                        :Head (N :t "vets")))
                                :Comp (PP
                                    :Head (P :t "up")
                                    :Comp (PP
                                        :Head (P :t "to")
                                        :Comp (Clause
                                            :Head (VP
                                                :Head (V :t "making")
                                                :Obj (x / GAP)
                                                :Comp (PP
                                                    :Head (P :t "against")
                                                    :Obj (NP
                                                        :Head (Nom
                                                            :Head (N :t "Kerry")))))))))))))))
    :Head (Coordination
        :Coordinate (VP
            :Head (V_aux :t "are")
            :PredComp (AdjP
                :Head (Adj :t "false")))
        :Coordinate (VP
            :Marker (Coordinator :t "and")
            :Head (VP
                :Head (V_aux :t "can")
                :Comp (Clause
                    :Head (VP
                        :Head (V_aux :t "be")
                        :Comp (Clause
                            :Head (VP
                                :Head (V :t "demonstrated")
                                :Comp (PP
                                    :Head (P :t "by")
                                    :Obj (NP
                                        :Det (DP
                                            :Head (D :t "the"))
                                        :Head (Nom
                                            :Mod (AdjP
                                                :Head (Adj :t "historical"))
                                            :Head (N :t "record"))))
                                :Comp (Clause
                                    :Head (VP
                                        :Marker (Sdr :t "to")
                                        :Head (VP
                                            :Head (V_aux :t "be")
                                            :PredComp (AdjP
                                                :Head (Adj :t "false")))))))))))))

# sent_id = weblog-blogspot.com_healingiraq_20040409053012_ENG_20040409_053012-0022
# sent_num = 19
# text = Over 300 Iraqis are reported dead and 500 wounded in Fallujah alone.
# sent = over 300 Iraqis are reported dead and 500 wounded in Fallujah alone
(Clause
    :Head (Coordination
        :Coordinate (Clause
            :Subj (NP
                :Det (PP
                    :Head (P :t "over")
                    :Obj (NP
                        :Head (Nom
                            :Det-Head (DP
                                :Head (D :t "300")))))
                :Head (Nom
                    :Head (N :t "Iraqis")))
            :Head (VP
                :Head (V_aux :t "are")
                :Comp (Clause
                    :Head (VP
                        :Head (V :t "reported")
                        :PredComp (AdjP
                            :Head (Adj :t "dead"))))))
        :Coordinate (NP+Clause
            :Marker (Coordinator :t "and")
            :Head (NP+Clause
                :Subj (NP
                    :Head (Nom
                        :Det-Head (DP
                            :Head (D :t "500"))))
                :Head (Clause
                    :Head (VP
                        :Head (V :t "wounded"))))))
    :Mod (PP
        :Head (P :t "in")
        :Obj (NP
            :Head (Nom
                :Head (N :t "Fallujah"))
            :Mod (AdjP
                :Head (Adj :t "alone")))))

# sent_id = ???20
# sent_num = 20
# text = Why is there no Deborah Tannen GIF I can respond to this with!
# sent = why is there -- no Deborah Tannen GIF I can respond to this with -- --
# URL = https://twitter.com/complingy/status/1620967795369594881
(Clause
    :Prenucleus (z / AdvP
        :Head (Adv :t "why"))
    :Head (Clause
        :Prenucleus (y / V_aux :t "is")
        :Head (Clause
            :Subj (NP
                :Head (Nom
                    :Head (N_pro :t "there")))
            :Head (VP
                :Head (VP
                    :Head (y / GAP)
                    :DisplacedSubj (NP
                        :Det (DP
                            :Head (D :t "no"))
                        :Head (Nom
                            :Head (x / Nom
                                :Mod (Nom
                                    :Head (N
                                        :Flat (N :t "Deborah")
                                        :Flat (N :t "Tannen")))
                                :Head (N :t "GIF"))
                            :Mod (Clause_rel
                                :Subj (NP
                                    :Head (Nom
                                        :Head (N_pro :t "I")))
                                :Head (VP
                                    :Head (V_aux :t "can")
                                    :Comp (Clause
                                        :Head (VP
                                            :Head (V :t "respond")
                                            :Comp (PP
                                                :Head (P :t "to")
                                                :Obj (NP
                                                    :Head (Nom
                                                        :Det-Head (DP
                                                            :Head (D :t "this")))))
                                            :Comp (PP
                                                :Head (P :t "with")
                                                :Obj (x / GAP)))))))))
                :Mod (z / GAP)))))

# sent_id = ???21
# sent_num = 21
# text = It may be necessary to ‘sacrifice’ a research question if it cannot be done justice to (see, for example, Sunderland, 1996a).
# sent = it may be necessary to sacrifice a research question if it cannot be done justice to see for example Sunderland 1996a
# source = Sunderland, Research Questions in Linguistics, p. 17
# URL = http://elld.home.amu.edu.pl/wp-content/uploads/2016/10/Litoselli_Ch_01.pdf
(Clause
    :Subj (NP
        :Head (Nom
            :Head (N_pro :t "it")))
    :Head (VP
        :Head (V_aux :t "may")
        :Comp (Clause
            :Head (VP
                :Head (VP
                    :Head (V_aux :t "be")
                    :PredComp (AdjP
                        :Head (Adj :t "necessary")))
                :ExtraposedSubj (Clause
                    :Head (VP
                        :Marker (Sdr :t "to")
                        :Head (VP
                            :Head (VP
                                :Head (V :t "sacrifice")
                                :Obj (NP
                                    :Det (DP
                                        :Head (D :t "a"))
                                    :Head (Nom
                                        :Mod (Nom
                                            :Head (N :t "research"))
                                        :Head (N :t "question"))))
                            :Mod (PP
                                :Head (P :t "if")
                                :Comp (Clause :note "prepositional passive: SIEG2 p. 367"
                                    :Subj (NP
                                        :Head (Nom
                                            :Head (N_pro :t "it")))
                                    :Head (VP
                                        :Head (V_aux :t "cannot")
                                        :Comp (Clause
                                            :Head (VP
                                                :Head (V_aux :t "be")
                                                :Comp (Clause
                                                    :Head (VP
                                                        :Head (V :t "done")
                                                        :Obj (NP
                                                            :Head (Nom
                                                                :Head (N :t "justice")))
                                                        :Comp (PP
                                                            :Head (P :t "to")))))))))))))))
    :Supplement (Clause :note "imperative"
        :Head (VP
            :Head (V :t "see")
            :Supplement (PP
                :Head (P :t "for")
                :Obj (NP
                    :Head (Nom
                        :Head (N :t "example"))))
            :Obj (NP
                :Head (Nom
                    :Head (N
                        :Flat (N :t "Sunderland")
                        :Flat (N :t "1996a")))))))

# sent_id = answers-20111108094831AAnOjgr_ans-0003
# sent_num = 22
# text = I love how it really depends on how good a horse your horse really is, not how talented he is.
# sent = I love how it really depends on how good a horse your horse really is -- not how talented he is -- --
(Clause
    :Subj (NP
        :Head (Nom
            :Head (N_pro :t "I")))
    :Head (VP
        :Head (V :t "love")
        :Comp (Clause
            :Prenucleus (i / AdvP
                :Head (Adv :t "how"))
            :Head (Clause
                :Head (Clause
                    :Subj (NP
                        :Head (Nom
                            :Head (N_pro :t "it")))
                    :Head (VP
                        :Mod (AdvP
                            :Head (Adv :t "really"))
                        :Head (VP
                            :Head (V :t "depends")
                            :Comp (PP
                                :Head (P :t "on")
                                :Comp (Clause
                                    :Prenucleus (y / NP
                                        :Mod (AdjP
                                            :Mod (AdvP
                                                :Head (Adv :t "how"))
                                            :Head (Adj :t "good"))
                                        :Head (NP
                                            :Det (DP
                                                :Head (D :t "a"))
                                            :Head (Nom
                                                :Head (N :t "horse"))))
                                    :Head (Clause
                                        :Subj (NP
                                            :Det (NP
                                                :Head (Nom
                                                    :Head (N_pro :t "your")))
                                            :Head (Nom
                                                :Head (N :t "horse")))
                                        :Head (VP
                                            :Mod (AdvP
                                                :Head (Adv :t "really"))
                                            :Head (VP
                                                :Head (V_aux :t "is")
                                                :PredComp (y / GAP))))
                                    :Supplement (Clause
                                        :Mod (AdvP
                                            :Head (Adv :t "not"))
                                        :Head (Clause
                                            :Prenucleus (x / AdjP
                                                :Mod (AdvP
                                                    :Head (Adv :t "how"))
                                                :Head (Adj :t "talented"))
                                            :Head (Clause
                                                :Subj (NP
                                                    :Head (Nom
                                                        :Head (N_pro :t "he")))
                                                :Head (VP
                                                    :Head (V_aux :t "is")
                                                    :PredComp (x / GAP))))))))))
                :Mod (i / GAP)))))

# sent_id = reviews-211797-0013
# sent_num = 23
# text = Aside from that little *mystery*, one of the sales ladies was quite comfortable telling me how wrong I was about how another dress that I loved compared to one of her dresses that I was trying on.
# sent = aside from that little mystery one of the sales ladies was quite comfortable telling me how wrong -- I was -- about how another dress that I loved -- compared to one of her dresses that I was trying on -- --
(Clause
    :Supplement (PP
        :Head (P :t "aside")
        :Comp (PP
            :Head (P :t "from")
            :Obj (NP
                :Det (DP
                    :Head (D :t "that"))
                :Head (Nom
                    :Mod (AdjP
                        :Head (Adj :t "little"))
                    :Head (N :t "mystery")))))
    :Subj (NP
        :Head (Nom
            :Det-Head (DP
                :Head (D :t "one"))
            :Comp (PP
                :Head (P :t "of")
                :Obj (NP
                    :Det (DP
                        :Head (D :t "the"))
                    :Head (Nom
                        :Mod (Nom
                            :Head (N :t "sales"))
                        :Head (N :t "ladies"))))))
    :Head (VP
        :Head (V_aux :t "was")
        :PredComp (AdjP
            :Head (AdjP
                :Mod (AdvP
                    :Head (Adv :t "quite"))
                :Head (Adj :t "comfortable"))
            :Comp (Clause
                :Head (VP
                    :Head (V :t "telling")
                    :Obj (NP
                        :Head (Nom
                            :Head (N_pro :t "me")))
                    :Comp (Clause
                        :Head (Clause
                            :Prenucleus (x / AdjP
                                :Mod (AdvP
                                    :Head (Adv :t "how"))
                                :Head (AdjP
                                    :Head (Adj :t "wrong")
                                    :Comp (a / GAP)))
                            :Head (Clause
                                :Subj (NP
                                    :Head (Nom
                                        :Head (N_pro :t "I")))
                                :Head (VP
                                    :Head (V_aux :t "was")
                                    :PredComp (x / GAP))))
                        :Postnucleus (a / PP
                            :Head (P :t "about")
                            :Comp (Clause
                                :Prenucleus (z / AdvP
                                    :Head (Adv :t "how"))
                                :Head (Clause
                                    :Head (Clause
                                        :Subj (NP
                                            :Det (DP
                                                :Head (D :t "another"))
                                            :Head (Nom
                                                :Head (y / N :t "dress")
                                                :Mod (Clause_rel
                                                    :Marker (Sdr :t "that")
                                                    :Head (Clause_rel
                                                        :Subj (NP
                                                            :Head (Nom
                                                                :Head (N_pro :t "I")))
                                                        :Head (VP
                                                            :Head (V :t "loved")
                                                            :Obj (y / GAP))))))
                                        :Head (VP
                                            :Head (V :t "compared")
                                            :Comp (PP
                                                :Head (P :t "to")
                                                :Obj (NP
                                                    :Head (Nom
                                                        :Head (i / Nom
                                                            :Det-Head (DP
                                                                :Head (D :t "one"))
                                                            :Comp (PP
                                                                :Head (P :t "of")
                                                                :Obj (NP
                                                                    :Det (NP
                                                                        :Head (Nom
                                                                            :Head (N_pro :t "her")))
                                                                    :Head (Nom
                                                                        :Head (N :t "dresses")))))
                                                        :Mod (Clause_rel
                                                            :Marker (Sdr :t "that")
                                                            :Head (Clause_rel
                                                                :Subj (NP
                                                                    :Head (Nom
                                                                        :Head (N_pro :t "I")))
                                                                :Head (VP
                                                                    :Head (V_aux :t "was")
                                                                    :Comp (Clause
                                                                        :Head (VP
                                                                            :Head (VP
                                                                                :Head (V :t "trying")
                                                                                :Comp (PP
                                                                                    :Head (P :t "on")))
                                                                            :Mod (i / GAP)))))))))))
                                    :Mod (z / GAP))))))))))

# sent_id = reviews-206303-0004
# sent_num = 24
# text = She really listens to what it is you would like to achieve, and I am very happy with my results.
# sent = she really listens to what it is -- you would like to achieve -- and I am very happy with my results
(Coordination
    :Coordinate (Clause
        :Subj (NP
            :Head (Nom
                :Head (N_pro :t "she")))
        :Head (VP
            :Mod (AdvP
                :Head (Adv :t "really"))
            :Head (VP
                :Head (V :t "listens")
                :Comp (PP
                    :Head (P :t "to")
                    :Obj (NP
                        :Head (Nom
                            :Mod (Clause_rel :note "wh-extraction from an it-cleft"
                                :Head-Prenucleus (x / NP
                                    :Head (Nom
                                        :Head (N_pro :t "what")))
                                :Head (Clause_rel
                                    :Head (Clause_rel
                                        :Subj (NP
                                            :Head (Nom
                                                :Head (N_pro :t "it")))
                                        :Head (VP
                                            :Head (V_aux :t "is")
                                            :PredComp (x / GAP)))
                                    :Postnucleus (Clause_rel
                                        :Subj (NP
                                            :Head (Nom
                                                :Head (N_pro :t "you")))
                                        :Head (VP
                                            :Head (V_aux :t "would")
                                            :Comp (Clause
                                                :Head (VP
                                                    :Head (V :t "like")
                                                    :Comp (Clause
                                                        :Head (VP
                                                            :Marker (Sdr :t "to")
                                                            :Head (VP
                                                                :Head (V :t "achieve")
                                                                :Obj (x / GAP))))))))))))))))
    :Coordinate (Clause
        :Marker (Coordinator :t "and")
        :Head (Clause
            :Subj (NP
                :Head (Nom
                    :Head (N_pro :t "I")))
            :Head (VP
                :Head (V_aux :t "am")
                :PredComp (AdjP
                    :Mod (AdvP
                        :Head (Adv :t "very"))
                    :Head (AdjP
                        :Head (Adj :t "happy")
                        :Comp (PP
                            :Head (P :t "with")
                            :Obj (NP
                                :Det (NP
                                    :Head (Nom
                                        :Head (N_pro :t "my")))
                                :Head (Nom
                                    :Head (N :t "results"))))))))))

# sent_id = ???25
# sent_num = 25
# text = It's that he's so self-satisfied that I find offputting.
# sent = it 's that he 's so self-satisfied that I find -- offputting
# source = CGEL p. 1418
(Clause :note "it-cleft"
    :Head (Clause
        :Subj (NP
            :Head (Nom
                :Head (N_pro :t "it")))
        :Head (VP
            :Head (V_aux :t "'s")
            :PredComp (y / Clause
                :Marker (Sdr :t "that")
                :Head (Clause
                    :Subj (NP
                        :Head (Nom
                            :Head (N_pro :t "he")))
                    :Head (VP
                        :Head (V_aux :t "'s")
                        :PredComp (AdjP
                            :Mod (AdvP
                                :Head (Adv :t "so"))
                            :Head (Adj :t "self-satisfied")))))))
    :Postnucleus (Clause_rel
        :Marker (Sdr :t "that")
        :Head (Clause_rel
            :Subj (NP
                :Head (Nom
                    :Head (N_pro :t "I")))
            :Head (VP
                :Head (V :t "find")
                :Comp (y / GAP)
                :PredComp (AdjP
                    :Head (Adj :t "offputting"))))))

# sent_id = ???26
# sent_num = 26
# text = Wasn't it rather McIlroy who seemed never to be outdriven when playing in contention?
# sent = wasn't it -- rather McIlroy who -- seemed never to be outdriven when playing in contention
# source = Constructions and Frames: Special Issue on the Future of Construction Grammar (2023)
# URL = https://remivantrijp.eu/pubs/constructions-and-frames-draft-jan23.pdf
(Clause :note "it-cleft as a question"
    :Prenucleus (x / V_aux :t "wasn't")
    :Head (Clause
        :Head (Clause
            :Subj (NP
                :Head (Nom
                    :Head (N_pro :t "it")))
            :Head (VP
                :Head (x / GAP)
                :PredComp (NP
                    :Mod (AdvP
                        :Head (Adv :t "rather"))
                    :Head (Nom
                        :Head (N :t "McIlroy")))))
        :Postnucleus (Clause_rel
            :Prenucleus (y / NP
                :Head (Nom
                    :Head (N_pro :t "who")))
            :Head (Clause_rel
                :Subj (y / GAP)
                :Head (VP
                    :Head (V :t "seemed")
                    :Comp (Clause
                        :Head (VP
                            :Mod (AdvP
                                :Head (Adv :t "never"))
                            :Head (VP
                                :Marker (Sdr :t "to")
                                :Head (VP
                                    :Head (V_aux :t "be")
                                    :Comp (Clause
                                        :Head (VP
                                            :Head (V :t "outdriven")
                                            :Mod (PP
                                                :Head (P :t "when")
                                                :Comp (Clause
                                                    :Head (VP
                                                        :Head (V :t "playing")
                                                        :Mod (PP
                                                            :Head (P :t "in")
                                                            :Obj (NP
                                                                :Head (Nom
                                                                    :Head (N :t "contention"))))))))))))))))))

# sent_id = ???27
# sent_num = 27
# text = Who’s the most recent POTUS one can plausibly dress as and the clothes be sufficiently distinctive that it’s obvious you’re dressed as that POTUS?
# sent = who ’s the most recent POTUS one can plausibly dress as -- and the clothes be sufficiently distinctive that it ’s obvious you ’re dressed as that POTUS
# source = Twitter: @arthur_spirling
# URL = https://twitter.com/arthur_spirling/status/1628184850825105408
(Clause
    :Subj (NP
        :Head (Nom
            :Head (N_pro :t "who")))
    :Head (VP
        :Head (V_aux :t "’s")
        :PredComp (NP
            :Det (DP
                :Head (D :t "the"))
            :Head (Nom
                :Head (y / Nom
                    :Mod (AdjP
                        :Mod (AdvP
                            :Head (Adv :t "most"))
                        :Head (Adj :t "recent"))
                    :Head (N :t "POTUS"))
                :Mod (Coordination
                    :Coordinate (Clause_rel
                        :Subj (NP
                            :Head (Nom
                                :Head (N_pro :t "one")))
                        :Head (VP
                            :Head (V_aux :t "can")
                            :Comp (Clause
                                :Head (VP
                                    :Mod (AdvP
                                        :Head (Adv :t "plausibly"))
                                    :Head (VP
                                        :Head (V :t "dress")
                                        :Comp (PP
                                            :Head (P :t "as")
                                            :PredComp (y / GAP)))))))
                    :Coordinate (Clause :note "surprising coordinate (a relative clause would be expected)"
                        :Marker (Coordinator :t "and")
                        :Head (Clause
                            :Subj (NP
                                :Det (DP
                                    :Head (D :t "the"))
                                :Head (Nom
                                    :Head (N :t "clothes")))
                            :Head (VP
                                :Head (V_aux :t "be")
                                :PredComp (AdjP
                                    :Head (AdjP
                                        :Mod (AdvP
                                            :Head (Adv :t "sufficiently"))
                                        :Head (Adj :t "distinctive"))
                                    :Comp_ind (Clause
                                        :Marker (Sdr :t "that")
                                        :Head (Clause
                                            :Subj (NP
                                                :Head (Nom
                                                    :Head (N_pro :t "it")))
                                            :Head (VP
                                                :Head (VP
                                                    :Head (V_aux :t "’s")
                                                    :PredComp (AdjP
                                                        :Head (Adj :t "obvious")))
                                                :ExtraposedSubj (Clause
                                                    :Subj (NP
                                                        :Head (Nom
                                                            :Head (N_pro :t "you")))
                                                    :Head (VP
                                                        :Head (V_aux :t "’re")
                                                        :Comp (Clause
                                                            :Head (VP
                                                                :Head (V :t "dressed")
                                                                :Comp (PP
                                                                    :Head (P :t "as")
                                                                    :PredComp (NP
                                                                        :Det (DP
                                                                            :Head (D :t "that"))
                                                                        :Head (Nom
                                                                            :Head (N :t "POTUS"))))))))))))))))))))
